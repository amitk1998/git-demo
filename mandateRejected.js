var Sequelize = require('sequelize');

module.exports = function(connection, DataType){

	var mandate_rejected = connection.define('mandate_rejected', {
		batch_id: Sequelize.STRING,
		reversal_batch_id:Sequelize.STRING,
		merge_batch_id: Sequelize.STRING,
		merge_flag: {
			type:Sequelize.BOOLEAN,
			defaultValue: false
		},
		reversal_current_date:Sequelize.DATE,
		source_system: Sequelize.STRING,
		mandate_type: Sequelize.STRING,
		bank_code: Sequelize.STRING,
		company_code: Sequelize.STRING,
		type: Sequelize.STRING,
		loan_no: Sequelize.STRING,
		emi_amount:{type:Sequelize.INTEGER},
		customer_name: Sequelize.STRING,
		account_number: Sequelize.STRING,
		registration_date: Sequelize.DATE,
		mandate_start_date: Sequelize.DATE,
		unti_cancelled: Sequelize.STRING,
		mandate_end_date: Sequelize.DATE,
		mandate_date: Sequelize.DATE,
		mandate_maximum_amount: Sequelize.STRING,
		umrn_no: Sequelize.STRING,
		account_holder_name: Sequelize.STRING,
		utility_code: Sequelize.STRING,
		account_type: Sequelize.STRING,
		product_type: Sequelize.STRING,
		sub_product_type: Sequelize.STRING,
		system_code: Sequelize.STRING,
		frequency_code: Sequelize.STRING,
		customer_additional_information: Sequelize.STRING,
		micr_code: Sequelize.STRING,
		ifsc_code: Sequelize.STRING,
		bank_name: Sequelize.STRING,
		branch_code: Sequelize.STRING,
		sponsor_bank_code: Sequelize.STRING,
		city: Sequelize.STRING,
		contribution: Sequelize.STRING,
		cycle_date: Sequelize.STRING,
		category_code: Sequelize.STRING,
		mobile_number: Sequelize.STRING,
		std_code: Sequelize.STRING,
		boardline_no: Sequelize.STRING,
		office_email: Sequelize.STRING,
		personal_email: Sequelize.STRING,
		action: Sequelize.STRING,
		amount:Sequelize.STRING,
		source_system_unique_number:Sequelize.STRING,
		rejection_code: Sequelize.STRING,
		remark: Sequelize.STRING,
		web_top: Sequelize.STRING,
		los_id:Sequelize.STRING,
		presentment_mode: Sequelize.STRING,
		cust_ref_no: Sequelize.STRING,
		success:Sequelize.STRING,
		fail: Sequelize.STRING,
		response_status: Sequelize.STRING,
		response_rejection_reason: Sequelize.STRING,
		response_remarks: Sequelize.STRING,
		tpsl_data_uploaded_date:Sequelize.DATE,
		tpsl_data_approve_on:Sequelize.DATE,
		tpls_npci_acknowledgment_date:Sequelize.DATE,
		tpsl_npci_resp_date:Sequelize.DATE,
		tpsl_presment_mode:Sequelize.STRING,
        tpsl_res_batch_id:Sequelize.STRING,
        tpsl_process_uniq_no:Sequelize.STRING,
		tpsl_reg_type:Sequelize.STRING,
		tpsl_reLodge_date:Sequelize.STRING,
		tpsl_old_umrn_no:Sequelize.STRING,
		tpsl_reLodge_done_for_rejection_res:Sequelize.STRING,
		tpsl_Registred_by:Sequelize.STRING,
		status: Sequelize.STRING,
		upload_status: Sequelize.STRING,
		upload_rejection_reason: Sequelize.STRING,
		upload_reject_reason: Sequelize.STRING,
		merchantRequestNo: Sequelize.STRING,
		mandate_request_id:{type:Sequelize.STRING(20)},
        mandate_creation_date_time:{type:Sequelize.STRING(20)},     
        enach_mandate_id:Sequelize.STRING(35),//digio PK
		mail_status:Sequelize.STRING(30),
		tcs_bank_res_status:Sequelize.STRING(100),
		tcs_report_rejection_code:Sequelize.STRING(100),
		mandate_status:Sequelize.STRING(30),
		mandate_reversal_reject_reason:Sequelize.STRING(100)      
	},
	{
		classMethods: {
			
		},
    freezeTableName: true,
});

	return mandate_rejected;
};